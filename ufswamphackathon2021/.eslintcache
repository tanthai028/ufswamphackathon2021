[{"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\index.js":"1","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\App.js":"2","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Budgeting\\Budgeting.js":"3","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Home\\Home.js":"4","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Interest\\Interest.js":"5","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\Tutorials.js":"6","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Game\\Game.js":"7","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\components\\Header\\Header.js":"8","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\bills_checks\\Checks.js":"9","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\bank\\Bank.js":"10","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\taxes\\Taxes.js":"11","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\credit_debit\\Credit.js":"12"},{"size":449,"mtime":1611988584610,"results":"13","hashOfConfig":"14"},{"size":1538,"mtime":1612061549512,"results":"15","hashOfConfig":"14"},{"size":11485,"mtime":1612061549536,"results":"16","hashOfConfig":"14"},{"size":281,"mtime":1612056917228,"results":"17","hashOfConfig":"14"},{"size":1971,"mtime":1612061549555,"results":"18","hashOfConfig":"14"},{"size":984,"mtime":1612061549573,"results":"19","hashOfConfig":"14"},{"size":1114,"mtime":1612056917228,"results":"20","hashOfConfig":"14"},{"size":524,"mtime":1612056917227,"results":"21","hashOfConfig":"14"},{"size":922,"mtime":1612056917231,"results":"22","hashOfConfig":"14"},{"size":4127,"mtime":1612067910913,"results":"23","hashOfConfig":"14"},{"size":920,"mtime":1612056917232,"results":"24","hashOfConfig":"14"},{"size":922,"mtime":1612056917231,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8mle2v",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\index.js",[],["56","57"],"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\App.js",["58","59","60"],"\r\nimport React from \"react\";\r\nimport {Nav} from 'react-bootstrap'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Home from './pages/Home/Home.js';\r\nimport Interest from './pages/Interest/Interest.js';\r\nimport Tutorials from './pages/Tutorials/Tutorials.js';\r\nimport Budgeting from \"./pages/Budgeting/Budgeting.js\";\r\nimport Bank from \"./pages/Tutorials/bank/Bank.js\";\r\nimport Checks from \"./pages/Tutorials/bills_checks/Checks.js\";\r\nimport Taxes from \"./pages/Tutorials/taxes/Taxes.js\";\r\nimport Credit from \"./pages/Tutorials/credit_debit/Credit.js\";\r\nimport Game from \"./pages/Game/Game.js\";\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">      \r\n        <Header/>\r\n          <Switch>\r\n            <Route exact path=\"/Home\" component={Home} />\r\n            <Route exact path=\"/Interest\" component={Interest} />\r\n            <Route exact path=\"/Budgeting\" component={Budgeting} />\r\n            <Route exact path=\"/Tutorials\" component={Tutorials} />\r\n            <Route exact path=\"/Game\" component={Game} />\r\n            <Route exact path=\"/Bank\" component={Bank} />\r\n            <Route exact path=\"/Checks\" component={Checks} />\r\n            <Route exact path=\"/Taxes\" component={Taxes} />\r\n            <Route exact path=\"/Credit\" component={Credit} />\r\n          </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Budgeting\\Budgeting.js",["61","62","63","64","65","66"],"import React, { useState, useEffect } from 'react';\r\nimport './Budget.css';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport moment from 'moment';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nexport default function Interest() {\r\n    const classes = useStyles();\r\n    const [totalBalance, setTotalBalance] = useState('');\r\n    const [displayBalance, setDisplayBalance] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [percentage, setPercentage] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const [totalPercent, setTotalPercent] = useState(0);\r\n    const [notes, setNotes] = useState(\"\");\r\n    const [warning, setWarning] = useState('')\r\n    const [spent, setSpent] = useState('');\r\n    const [pickSpent, setPickSpent] = useState('');\r\n    const [dropdownList, setDropdownList] = useState([]);\r\n    const [pieChartData, setPieChartData] = useState([]);\r\n    var colors = ['#fad15f', '#f043da', '#82f4ff', '#6CFF60', '#FFBA85', '#FF0E0E'];\r\n    const [colorCount, setColorCount] = useState(0);\r\n    const [isSpentSubmitted, setIsSpentComitted] = useState(false);\r\n    const [date, setDate] = useState('');\r\n    const [history, setHistory] = useState([]);\r\n    \r\n\r\n    useEffect(() => { \r\n        setDate(moment().format(\"MMMM DD, Y\"));\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setDisplayBalance(totalBalance);\r\n\r\n    }\r\n\r\n    // const handleChoice = (event) => {\r\n    //     setPickSpent(event.target.value);\r\n    //   };\r\n\r\n    const handleCategories = (e) => {\r\n        e.preventDefault();\r\n        var calcAmount = totalBalance * (percentage/100);\r\n        // var newBalance = totalBalance - calcAmount;\r\n        // setTotalBalance(newBalance);\r\n        var currentPercent = totalPercent + percentage;\r\n        if(currentPercent <= 100) {\r\n            setTotalPercent(currentPercent);\r\n            setCategories(oldList => [...oldList, {name: name, percentage: percentage, catBalance: calcAmount, color: colors[colorCount]}]);\r\n            setPieChartData(oldList => [...oldList, {title: name, value: percentage, color: colors[colorCount]}]);\r\n            setDropdownList(oldList => [...oldList, name]);\r\n            var count = colorCount + 1;\r\n            setColorCount(count);\r\n        } else {\r\n            setWarning(\"Check Value or 100% Reached.\");\r\n        }\r\n    }\r\n\r\n      const handleSpent = (e) => {\r\n        setIsSpentComitted(true);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (isSpentSubmitted) {\r\n            Object.keys(categories).map(function(key,index) {\r\n                if(pickSpent == categories[key].name && categories[key].catBalance - spent >= 0) {\r\n                    categories[key].catBalance  = categories[key].catBalance - spent;\r\n    \r\n                    setHistory(list => [...list, {name: categories[key].name, note: notes, spent: spent, date: date}]);\r\n                    console.log(history);\r\n                    console.log(notes);\r\n                }\r\n            setIsSpentComitted(false);\r\n           })\r\n\r\n        }\r\n    }, [isSpentSubmitted]);\r\n\r\n\r\n\r\n    //object for \r\n\r\n    return (\r\n        <div className=\"budget\">\r\n        <div className=\"topText\">\r\n            <p className=\"title\">Budgeting</p>\r\n            <p className=\"date\">{date}</p>\r\n        </div>\r\n        <div className=\"topContainer\">\r\n         <div className=\"formArea\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <p className=\"headings\">SET TOTAL MONTHLY BALANCE</p>\r\n                    <div>\r\n                        <input className=\"inputBalance\" placeholder=\"amount\" \r\n                            onChange={e => setTotalBalance(parseInt(e.target.value))} value={totalBalance}>\r\n                        </input>\r\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.button} \r\n                            onClick={handleSubmit}>Submit\r\n                        </Button>\r\n                    </div>\r\n                \r\n                </form>\r\n                <form className=\"form\" onSubmit={handleCategories}>\r\n                    <p className=\"headings\">ADD CATEGORIES</p>\r\n                    <div className=\"catField\">\r\n                        <input className=\"inputBalance\" placeholder=\"category\" \r\n                            onChange={cat => setName(cat.target.value)} value={name}>\r\n                        </input>\r\n                        <input className=\"inputBalance\" placeholder=\"percentage\" \r\n                            onChange={per => setPercentage(parseInt(per.target.value))} value={percentage}>\r\n                        </input>\r\n                        <Button variant=\"outlined\" color=\"secondary\" className={classes.buttonAdd} \r\n                            onClick={handleCategories}>Add\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <form className=\"form\" onSubmit={handleSpent}>\r\n                    {/* <Dropdown className=\"test\" options={dropdownList} onChange={e => setPickSpent(e)} placeholder=\"Select an option\"/> */}\r\n                    <div className={classes.root}>\r\n                        <p className=\"headings\">SPENT</p>\r\n                        <input className=\"inputBalance\" placeholder=\"amount\" \r\n                            onChange={num => setSpent(num.target.value)} value={spent}>\r\n                        </input>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-helper-label\"\r\n                            id=\"demo-simple-select-helper\"\r\n                            input={<BootstrapInput />}\r\n                            className={classes.selectEmpty}\r\n                            value={pickSpent}\r\n                            MenuProps={{ classes: { paper: classes.select } }}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.icon,\r\n                                },\r\n                            }}\r\n                            onChange={choice => setPickSpent(choice.target.value)}>\r\n                            <MenuItem value=\"\"> <em>Select</em> </MenuItem>\r\n                            {categories.map((catItem, index) =>\r\n                                <MenuItem value={catItem.name}>{catItem.name}</MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"notesContainer\">\r\n                        <textarea \r\n                            className=\"noteInput\" \r\n                            placeholder=\"notes about spendings\" \r\n                            onChange={note => setNotes(note.target.value)} value={notes}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                     <Button variant=\"outlined\" color=\"secondary\" className={classes.button} \r\n                            onClick={handleSpent}>Submit\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n             <div className=\"infoArea\">\r\n                    <p className=\"headings\">TOTAL BALANCES: ${displayBalance}</p>\r\n                    <div className=\"catInfo\">\r\n                        {categories.map((catItem, index) =>\r\n                            <div className=\"tagBox\" style={{backgroundColor: catItem.color}}><p>{catItem.name} | balance: ${catItem.catBalance} </p></div>\r\n                            \r\n                            //<p>Category: {catItem.name} | Amount: ${catItem.catBalance} | Percentage: {catItem.percentage}</p>\r\n                        )}\r\n                        <p className=\"warning\">{warning}</p>\r\n                    </div>\r\n             </div>\r\n        </div>\r\n        <div style={{ borderTop: \"0.5px solid #bdbdf0 \", marginLeft: 20, marginRight: 20, marginTop: 100, marginBottom: 50 }}></div>\r\n        <div className=\"bottomInfo\">\r\n        \r\n             <div className=\"pieChartContainer\">\r\n                 <p className=\"headings\">BUDGET CATEGORIES (%)</p>\r\n                 <div className=\"pieChart\">\r\n                    <PieChart\r\n                        radius={80}\r\n                        viewBoxSize={[300, 100]}\r\n                        center={[150, 10]}\r\n                        data={\r\n                            pieChartData \r\n                        }/>\r\n                 </div>\r\n               \r\n            </div>\r\n\r\n            <div className=\"spendingInfo\">\r\n                 <p className=\"headings\">HISTORY</p>\r\n                    <div className=\"spendingInfoObjects\">\r\n                        {history.map((info, index) =>\r\n                        <div className=\"spendingObject\">\r\n                            <p className=\"headings\">{info.date}</p>\r\n                            <p className=\"headings\">{info.name}</p>\r\n                            <p className=\"headings\">SPENT ${info.spent}</p>\r\n                            <p className=\"headings\">{info.note}</p>\r\n                        </div>\r\n                        \r\n                        )}\r\n                    </div>          \r\n            </div>\r\n        </div>                    \r\n            \r\n\r\n    \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        fontSize: 12,\r\n        letterSpacing: 2,\r\n        marginBottom: 10\r\n    },\r\n    buttonAdd: {\r\n        fontSize: 12,\r\n        letterSpacing: 2,\r\n        marginBottom: 10,\r\n        paddingLeft: 26,\r\n        paddingRight: 26\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        width: 160,\r\n        marginRight: 10,\r\n        marginLeft: 12,\r\n        fontSize: 15,\r\n        color: \"white\",\r\n        \"&:before\": {\r\n            borderColor: \"#562a73\",\r\n            //width: 200,\r\n        }, \r\n        '&:after': {\r\n            borderColor: \"#562a73\",\r\n        },\r\n    }, \r\n    select: {\r\n        \"& ul\": {\r\n            backgroundColor: \"#562a73\",\r\n        },\r\n        \"& li\": {\r\n            fontSize: 12,\r\n            color: 'white'\r\n        },\r\n    },\r\n    specialOutline: {\r\n        borderColor: 'red',\r\n        color: 'red'\r\n      },\r\n      title: {\r\n        fontSize: 20,\r\n        padding: 10,\r\n        letterSpacing: 3\r\n      },\r\n  }));\r\n\r\n  const BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: '#1a1e4d',\r\n      border: '1px solid #562a73',\r\n      fontSize: '15px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:focus': {\r\n        fontSize: '15px',\r\n        borderRadius: 4,\r\n        borderColor: '#562a73',\r\n      },\r\n    },\r\n  }))(InputBase);\r\n\r\n\r\n","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Home\\Home.js",["67"],"import React from 'react'\r\nimport './Home.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"homeDiv\">\r\n            <p>test</p>\r\n            <p>test</p>\r\n            <p>test</p> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Interest\\Interest.js",["68"],"import React, { useState } from 'react';\r\nimport './Interest.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function Interest() {\r\n    const classes = useStyles();\r\n    const [annualIncome, setAnnualIncome] = useState(0) \r\n    const [loanBalance, setLoanBalance] = useState(0)\r\n    const [days, setDays] = useState(0)\r\n    const [result, setResult] = useState(0)\r\n    \r\n    const calculate = (e) => {\r\n        e.preventDefault();\r\n        var decimal = annualIncome/100;\r\n        var annualInt = decimal/365;\r\n        var dailyInt = annualInt * loanBalance;\r\n        var monthlyInt = dailyInt * 30;\r\n        setResult(monthlyInt);\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"interestPage\">\r\n        <p className=\"title\">Interest Page</p>\r\n        <form onSubmit = {calculate}>\r\n            <p className=\"headings\">Input annual interest</p>\r\n            <input className=\"inputInterest\" onChange = {e => setAnnualIncome(e.target.value)} value = {annualIncome}  ></input>\r\n            <br></br>\r\n            <p className=\"headings\">Input loan balance</p>\r\n            <input className=\"inputInterest\" onChange = {e => setLoanBalance(e.target.value)} value = {loanBalance}  ></input>\r\n            <br></br>\r\n            <p className=\"headings\">Input days since last payments</p>\r\n            <input className=\"inputInterest\" onChange = {e => setDays(e.target.value)} value = {days}  ></input>\r\n            <br></br>\r\n            <br></br>\r\n            <Button variant=\"outlined\" color=\"secondary\" className={classes.button} \r\n                onClick={calculate}>Submit\r\n            </Button>\r\n        </form>\r\n        <p className=\"headings\">Interest occured since last payment: {result}</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        fontSize: 12,\r\n        letterSpacing: 2,\r\n        margin: 12\r\n    }\r\n  }));\r\n\r\n\r\n","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\Tutorials.js",[],"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Game\\Game.js",[],"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\components\\Header\\Header.js",["69","70"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t  <div id = \"_Header\">\r\n\t\t  <Link to=\"/Home\" className = \"_Link\">Home</Link>\r\n\t\t  <Link to=\"/Interest\" className = \"_Link\">Interest</Link>\r\n\t\t  <Link to=\"/Budgeting\" className = \"_Link\">Budgeting</Link>\r\n\t\t  <Link to=\"/Tutorials\" className = \"_Link\">Tutorials</Link>\r\n\t\t  <Link to=\"/Game\" className = \"_Link\">Game</Link>\r\n\t  </div>\r\n\t)\r\n  }\r\n\r\nexport default Header;\r\n","E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\bills_checks\\Checks.js",[],"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\bank\\Bank.js",[],"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\taxes\\Taxes.js",[],"E:\\Coding\\Git\\ufswamphackathon2021\\ufswamphackathon2021\\src\\pages\\Tutorials\\credit_debit\\Credit.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":20,"column":3,"nodeType":"77","messageId":"78","endLine":20,"endColumn":7},{"ruleId":"75","severity":1,"message":"81","line":24,"column":12,"nodeType":"77","messageId":"78","endLine":24,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":33,"column":5,"nodeType":"77","endLine":33,"endColumn":14,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":72,"column":41,"nodeType":"87","messageId":"88","endLine":72,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":73,"column":30,"nodeType":"91","messageId":"92","endLine":73,"endColumn":32},{"ruleId":"82","severity":1,"message":"93","line":84,"column":8,"nodeType":"94","endLine":84,"endColumn":26,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":128,"column":71,"nodeType":"98","endLine":128,"endColumn":88},{"ruleId":"75","severity":1,"message":"80","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"99","line":4,"column":22,"nodeType":"77","messageId":"78","endLine":4,"endColumn":32},{"ruleId":"75","severity":1,"message":"100","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":26},{"ruleId":"75","severity":1,"message":"101","line":2,"column":28,"nodeType":"77","messageId":"78","endLine":2,"endColumn":36},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Link' is defined but never used.","'dropdownList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["104"],"array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'categories', 'date', 'history', 'notes', 'pickSpent', and 'spent'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHistory' needs the current value of 'categories'.","ArrayExpression",["105"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'withStyles' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Add dependencies array: []",{"range":"110","text":"111"},"Update the dependencies array to be: [categories, date, history, isSpentSubmitted, notes, pickSpent, spent]",{"range":"112","text":"113"},[1523,1523],", []",[3296,3314],"[categories, date, history, isSpentSubmitted, notes, pickSpent, spent]"]